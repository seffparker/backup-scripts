#!/bin/bash

## This script will create, clean and sync MySQL database dumps.

## Author: Seff Parker
## Version: 20190707


## Database dump: settings
BACKUP_DIR="/backup/mysql"

# Sun to Mon (Daily in a week)
BACKUP_FREQUENCY="$(date +%a)" 

# 01 to 31 (Daily in a month)
# BACKUP_FREQUENCY="$(date +%d)"

# 00 to 23 (Hourly in a day)
# BACKUP_FREQUENCY="$(date +%H)"

BACKUP_PATH="${BACKUP_DIR}/${BACKUP_FREQUENCY}"

# List of database names to be excluded from dumps
DB_EXCLUDE_LIST="Database|test|information_schema|performance_schema|eximstats|sys"

## Clean orphaned database: settings

CLEAN_DB_DUMP="true"
SCAN_AGE_DAYS=32
EXT=".sql.gz"

## Sync dumps: option
# SYNC_DEST="/path/to/local_dir"
# SYNC_DEST="user@IP_ADDRESS:/path/to/remote_dir"

DB_LIST_CURRENT="$(echo 'show databases;' | mysql | grep -wvE "${DB_EXCLUDE_LIST}")"

## Dump and compress databases
mkdir -p $BACKUP_PATH
echo "INFO: Dumping MySQL databases to $BACKUP_PATH"
for DB_NAME in ${DB_LIST_CURRENT};
	do echo "INFO: Dumping database $DB_NAME"
	mysqldump --opt ${DB_NAME} | gzip -9 | cat > $BACKUP_PATH/${DB_NAME}.sql.gz;
done

DUMP_SIZE=$(du -sh $BACKUP_PATH | cut -f1)
echo "INFO: Database backup completed ($DUMP_SIZE)"


## Clean oprphaned databases dumps

echo "INFO: Scanning for orphaned backups..."
DB_LIST_FULLPATH=$(find $BACKUP_DIR -name "*$EXT" -mtime +${SCAN_AGE_DAYS})
DB_LIST_NAMEONLY=$(echo "$DB_LIST_FULLPATH" | xargs -l -I {} basename {} $EXT 2> /dev/null | sort | uniq )

if [ -z "${DB_LIST_NAMEONLY}" ]
	then echo -e "NOTICE: No \"$EXT\" backups found under $BACKUP_DIR older than $SCAN_AGE_DAYS days!"
else 
	for DB_NAME in ${DB_LIST_NAMEONLY}
	do if ! echo "${DB_LIST_CURRENT}" | grep -wq ${DB_NAME}
		then echo -n "WARNING: MySQL database doesn't exists: ${DB_NAME}"
		COUNT=$(echo "${DB_LIST_FULLPATH}" | grep -c ${DB_NAME}${EXT})
		if [ "${CLEAN_DB_DUMP}" == "true" ]
			then echo "$DB_LIST_FULLPATH" | grep ${DB_NAME}${EXT} | xargs rm -f &> /dev/null
			echo " (Deleted $COUNT orphaned backups)"
		else
			echo " (Found $COUNT orphaned backups)"
		fi
	fi
	done
	echo "INFO: Cleaning completed!"
fi

## Sync database dumps

if [ "$SYNC_DEST" ]
then
	echo "INFO: Syncing dumps to $SYNC_DEST" 	
	rsync -truv --delete $BACKUP_DIR $SYNC_DEST
	echo "INFO: Sync completed"
else
	echo "NOTICE: No sync is configured"
fi
